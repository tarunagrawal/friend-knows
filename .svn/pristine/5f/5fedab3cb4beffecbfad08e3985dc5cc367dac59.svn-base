package com.system.you.review.item.bean;

import java.util.Date;

import javax.persistence.Basic;
import javax.persistence.Cacheable;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.search.annotations.Analyze;
import org.hibernate.search.annotations.Field;
import org.hibernate.search.annotations.Index;
import org.hibernate.search.annotations.Indexed;
import org.hibernate.search.annotations.Store;
import org.springframework.core.style.ToStringCreator;

import com.system.you.review.Identifiable;
import com.system.you.review.category.bean.Category;
import com.system.you.review.database.IConstants;

@Cacheable
@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
@Indexed
@Entity
@Table(name = IConstants.ITable.INames.ITEM_TABLE)
public class Item implements Identifiable{

	@Id
	@GenericGenerator(name = IConstants.GENERATOR_NAME, strategy = IConstants.GENERATOR_STRATEGY)
	@GeneratedValue(generator = IConstants.GENERATOR_NAME)
	@Column(name = IConstants.ITable.IItem.ITEM_ID)
	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = IConstants.ITable.IItem.CATEGORY, nullable = false)
	@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
	public Category getCategory() {
		return category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	@Basic
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Basic
	public String getHashTag() {
		return hashTag;
	}

	public void setHashTag(String hashTag) {
		this.hashTag = hashTag;
	}
	
	@Basic
	public Date getCreateDateTime() {
		return createDateTime;
	}

	public void setCreateDateTime(Date createDateTime) {
		this.createDateTime = createDateTime;
	}

	@Basic
	public Date getUpdateDateTime() {
		return updateDateTime;
	}

	public void setUpdateDateTime(Date updateDateTime) {
		this.updateDateTime = updateDateTime;
	}

	public String toString() {
		return new ToStringCreator(this).append(id).append(category)
				.append(description).toString();
	}

	private String id;

	private Category category;

	@Field(index=Index.YES, analyze=Analyze.YES, store=Store.NO)
	private String description;

	private String hashTag;
	
	private Date createDateTime;
	
	private Date updateDateTime;

}
